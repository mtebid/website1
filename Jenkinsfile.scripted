#!/usr/bin/env groovy

pipeline {
    agent { 
        node { label 'worker1' } 
    }

	environment {
		DOCKERHUB_CREDS = credentials('18307b93-3074-471e-a5e0-ce482bca9419') 
		BUILD_JOB = "${env.JOB_BASE_NAME}"
		BUILD_NUM = "${env.BUILD_NUMBER}"
		BUILD_DIR = "/opt/jenkins/workspace"
		PUBLIC_IP = ""
		CNTR_PORT = 80
		HOST_PORT = 80
		IMAGE_NAME = "web"
		MAJOR_VER = "1"
		IMAGE_VER = "${MAJOR_VER}" + "." + "${env.BUILD_NUMBER}"
                IMAGE_TAG = ""
	}

	stages {
        stage('Pre-Build') {
            steps {
                sh "printenv"
                ip_cmd = "curl ifconfig.co | tail -1"
      	        PUBLIC_IP = sh(script: "${ip_cmd}", returnStdout: true).trim()
      	        echo "PUBLIC_IP: <<${PUBLIC_IP}>>"
      	        echo "HOST_PORT: <<${HOST_PORT}>>"
      	        echo "CNTR_PORT: <<${CNTR_PORT}>>"
      	        echo "IMAGE_VER: <<${IMAGE_VER}>>"
      	        echo "WORKSPACE: <<${BUILD_DIR}>>"
      	        echo "BUILD_NUMBER: <<${BUILD_NUM}>>"
      	        echo "JOB_BASE_NAME: <<${BUILD_JOB}>>"
            }
        }

        stage('GIT-Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/vkarkad/website1.git'
                sh "pwd && ls -la"
            }
        }

        //stage('Docker-Build') {
        //    steps {
        //        //return // FIXME
        //        echo "${env.STAGE}"

    	//        // Build the website image
        //        sh "cd ${BUILD_DIR}/${BUILD_JOB};pwd;ls -l;cat -n Dockerfile"
        //        IMAGE_TAG = "${BUILD_JOB}:${IMAGE_VER}"
        //        sh "sudo docker build --tag ${IMAGE_TAG} ."
        //        sh "sudo docker run -dit --name ${IMAGE_TAG} -p ${HOST_PORT}:${CNTR_PORT} ${IMAGE_TAG}"
    	//    }
        //}
        //stage('Image-Push') {
        //    steps {
        //        //return // FIXME
        //        echo "${env.STAGE}"

        //        // Publish the website image
        //        sh "sudo echo ${DOCKER_PASSWD} | sudo docker login -u ${DOCKER_USERID} --password-stdin"
        //        sh "sudo docker push vkarkad//
        //    }
        //}
         stage('Building image') {
          steps{
             script {
                echo "${env.STAGE}"
               IMAGE_TAG = "${BUILD_JOB}:${IMAGE_VER}"
               dockerImage = docker.build "${IMAGE_TAG}"
             }
          }
      }
    stage('Deploy Image') {
      steps{
        script {
                echo "${env.STAGE}"
          docker.withRegistry( '', DOCKERHUB_CREDS) {
            dockerImage.push("${IMAGE_TAG}")
            //dockerImage.push('latest')

          }
        }
      }
    }

       stage('Nginx-Deploy') {	
            steps {
                echo "${env.STAGE}"
      	        sh "cd ${BUILD_DIR}/${BUILD_JOB} && kubectl create -f deploy.yml"
      	        sh "cd ${BUILD_DIR}/${BUILD_JOB} && kubectl create -f svc.yml"
	    }
        }

        stage('Publish-Website') {
            steps {
                echo "${env.STAGE}"
		echo "Website URL: http://${PUBLIC_IP}:${HOST_PORT}"
	     }
        }
    }
}
